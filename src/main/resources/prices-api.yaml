openapi: "3.0.3"
info:
  title: Prices API
  version: "0.0.1"
  description: "Prices API - Let's query for prices"
tags:
  - name: Prices
    description: Endpoints related to products prices
paths:
  /prices:
    get:
      tags:
        - Prices
      description: Retrieve prices from products.
      operationId: getPrices
      parameters:
        - name: productId
          in: query
          required: true
          description: Product identifier.
          schema:
            type: integer
            minimum: 0
        - name: brandId
          in: query
          required: true
          description: Brand identifier.
          schema:
            type: integer
            minimum: 0
        - name: date
          in: query
          required: true
          description: Application date of the prices. (RFC 3339)
          example: 2017-07-21T17:32:28Z
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Events response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Price"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/UnexpectedResponse"
components:
  schemas:
    Error:
      type: object
      properties:
        title:
          type: string
          description: A a short, human-readable summary of the problem type.
          example: Bad Request
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
        path:
          type: string
          description: Path of the request
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: header Content-Type has unexpected value \"application/json\"
        timestamp:
          type: string
          format: date-time
          description: Time of the error.
      required:
        - title
        - status
        - detail
        - timestamp
        - path
      example: |
        {
          "title": "Bad Request",
          "status": 400,
          "detail": "header Content-Type has unexpected value \"application/json\"",
          "path": "/details",
          "timestamp": "2017-07-21T17:32:28Z"
        }
    Price:
      description: Product price
      type: object
      properties:
        productId:
          description: Product Identifier.
          type: integer
          example: 35455
        brandId:
          description: Brand Id.
          type: integer
          example: 1
        priceList:
          description: Price list to apply.
          type: integer
          example: 2
        startDate:
          description: Start application date.
          type: string
          format: date-time
        endDate:
          description: End application date.
          type: string
          format: date-time
        amount:
          description: Price to apply.
          type: number
          format: double
          example: 38.50
        currency:
          description: Currency to apply to the amount
          type: string
          example: EUR
      required:
        - productId
        - brandId
        - priceList
        - date
        - amount
        - currency
  responses:
    BadRequestResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFoundResponse:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    UnexpectedResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"